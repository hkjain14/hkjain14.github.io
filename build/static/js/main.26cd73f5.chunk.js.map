{"version":3,"sources":["component/OutputTable.js","findVaccinationCenters.js","component/Input.js","component/ErrorBanner.js","component/Main.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","light","color","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","OutputTable","classes","useState","outputLogs","setOutputLogs","addOutputLogs","event","prevState","detail","numberOfOptionsFound","clearOutputLogs","useEffect","window","addEventListener","TableContainer","component","Paper","Table","className","aria-label","Object","values","length","TableHead","align","dose","TableBody","map","row","key","date","centerName","pin","district","dose1Cap","dose2Cap","vaccine","cost","player","playSound","validVaccines","getRequest","url","a","axios","get","response","data","generateCurrentDate","splitDateTime","Date","toLocaleString","timeZone","split","month","year","generateConfigs","age","vaccinePreference","ageToCheck","upperCaseVaccinePreference","toUpperCase","includes","availableVaccines","matchVaccineArray","generateCentersUrl","pinCode","isFreeVaccineOnly","errorEvent","CustomEvent","errorMessage","dispatchEvent","isCenterFound","centersUrlArray","Promise","all","centersUrl","centers","center","sessions","session","min_age_limit","available_capacity","vaccinationLogString","feeType","fee_type","vaccine_fees","find","vacc","fee","doseObj","available_capacity_dose1","available_capacity_dose2","outputEvent","name","pincode","district_name","play","err","error","findVaccinationCenters","Input","setAge","setPin","setVaccine","setIsFreeVaccineOnly","setDose","onSubmit","e","preventDefault","stopPropagation","clearOutputEvent","run","type","value","onChange","target","checked","prev","ErrorBanner","undefined","setErrorMessage","updateErrorMessage","clearErrorMessage","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26cd73f5.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.primary.light,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nexport default function OutputTable() {\n    const classes = useStyles();\n    const [outputLogs, setOutputLogs] = useState({});\n\n    const addOutputLogs = (event) => {\n        setOutputLogs((prevState) => ({...prevState, [event.detail.numberOfOptionsFound]: event.detail}));\n    };\n    const clearOutputLogs = () => {\n        setOutputLogs({});\n    };\n\n    useEffect(() => {\n        window.addEventListener(\n            \"outputEvent\",\n            addOutputLogs,\n            false\n        );\n        window.addEventListener(\n            \"clearOutputEvent\",\n            clearOutputLogs,\n            false\n        );\n    }, []);\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                {Object.values(outputLogs).length !== 0 && <TableHead>\n                    <StyledTableRow>\n                        <StyledTableCell align=\"center\">Date</StyledTableCell>\n                        <StyledTableCell align=\"center\">Center</StyledTableCell>\n                        <StyledTableCell align=\"center\">Pin code</StyledTableCell>\n                        <StyledTableCell align=\"center\">District</StyledTableCell>\n                        {Object.values(outputLogs)[0].dose === '1' && <StyledTableCell align=\"center\">Dose 1 slots</StyledTableCell>}\n                        {Object.values(outputLogs)[0].dose === '2' && <StyledTableCell align=\"center\">Dose 2 slots</StyledTableCell>}\n                        <StyledTableCell align=\"center\">Vaccine</StyledTableCell>\n                        <StyledTableCell align=\"center\">Cost</StyledTableCell>\n                    </StyledTableRow>\n                </TableHead>}\n                <TableBody>\n                    {Object.values(outputLogs).map((row) => (\n                        <StyledTableRow key={row.numberOfOptionsFound}>\n                            <StyledTableCell align=\"center\">{row.date}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{row.centerName}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{row.pin}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{row.district}</StyledTableCell>\n                            {row.dose === '1' && <StyledTableCell align=\"center\">{row.dose1Cap}</StyledTableCell>}\n                            {row.dose === '2' && <StyledTableCell align=\"center\">{row.dose2Cap}</StyledTableCell>}\n                            <StyledTableCell align=\"center\">{row.vaccine}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{row.cost}</StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}","import axios from 'axios';\nimport playSound from 'play-sound';\n\nconst player = playSound({});\n\nconst validVaccines = ['COVISHIELD', 'COVAXIN', 'SPUTNIK V'];\n\nasync function getRequest(url) {\n    try {\n        const response = await axios.get(url);\n        return response.data;\n    } catch (e) {\n        throw e;\n    }\n}\n\nfunction generateCurrentDate() {\n    const currentDateTime = new Date();\n    const istDateTime = currentDateTime.toLocaleString('en-GB', {timeZone: 'Asia/Calcutta'})\n    const splitDateTime = istDateTime.split('/');\n    const date = splitDateTime[0];\n    const month = splitDateTime[1];\n    const year = splitDateTime[2].split(',')[0];\n    return `${date}-${month}-${year}`;\n}\n\nfunction generateConfigs(age, vaccinePreference) {\n    const ageToCheck = age >= 18 && age <= 44 ? 18 : 45;\n    let upperCaseVaccinePreference = vaccinePreference && vaccinePreference.toUpperCase();\n    if ((upperCaseVaccinePreference && !validVaccines.includes(upperCaseVaccinePreference)) || !upperCaseVaccinePreference) {\n        upperCaseVaccinePreference = '';\n    }\n    const availableVaccines = ['', ...validVaccines];\n    const matchVaccineArray = upperCaseVaccinePreference !== '' ? [vaccinePreference.toUpperCase()] : availableVaccines;\n    return {ageToCheck, matchVaccineArray};\n}\n\nasync function generateCentersUrl(pinCode) {\n    return [`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pinCode}&date=${generateCurrentDate()}`];\n}\n\nasync function findVaccinationCenters(age, vaccine, pin, isFreeVaccineOnly, dose) {\n    let numberOfOptionsFound = 0;\n    if (age < 18 || age >= 140) {\n        const errorEvent = new CustomEvent(\"errorEvent\", {\n                detail: {\n                    errorMessage: 'Invalid age entered. Please enter a valid age.',\n                },\n            },\n        );\n        window.dispatchEvent(errorEvent);\n        return true;\n    }\n    let isCenterFound = false;\n    try {\n        const {ageToCheck, matchVaccineArray} = generateConfigs(age, vaccine);\n        const centersUrlArray = await generateCentersUrl(pin);\n        await Promise.all(centersUrlArray.map(async (centersUrl) => {\n            const {centers} = await getRequest(centersUrl);\n            centers && centers.map((center) => {\n                center.sessions && center.sessions.map((session) => {\n                    if (session.min_age_limit === ageToCheck && session.available_capacity !== 0 && matchVaccineArray.includes(session.vaccine.toUpperCase())) {\n                        const vaccinationLogString = session.vaccine !== '' ? session.vaccine.toUpperCase() : 'Unknown';\n                        const feeType = center.fee_type;\n                        let cost;\n                        if (feeType === 'Free') {\n                            cost = feeType;\n                        } else if (feeType === 'Paid') {\n                            const vaccine = center.vaccine_fees && center.vaccine_fees.find((vacc) => vacc.vaccine === session.vaccine);\n                            cost = vaccine ? `Rs. ${vaccine.fee}` : 'Paid';\n                        }\n                        if(!isFreeVaccineOnly || feeType === 'Free') {\n                            numberOfOptionsFound++;\n                            isCenterFound = true;\n                            const doseObj = dose === '1' ? {dose1Cap: session.available_capacity_dose1} : {dose2Cap: session.available_capacity_dose2};\n                            const outputEvent = new CustomEvent(\"outputEvent\", {\n                                    detail: {\n                                        numberOfOptionsFound,\n                                        dose,\n                                        ...doseObj,\n                                        centerName: center.name,\n                                        pin: center.pincode,\n                                        district: center.district_name,\n                                        date: session.date,\n                                        vaccine: vaccinationLogString,\n                                        cost,\n                                    },\n                                },\n                            );\n                            window.dispatchEvent(outputEvent);\n                        }\n                    }\n                });\n            });\n        }));\n        if (!isCenterFound) {\n            const errorEvent = new CustomEvent(\"errorEvent\", {\n                    detail: {\n                        errorMessage: 'No available centers found in pincode/area for age specified for the next 7 days. Try choosing a nearby pincode/area.',\n                    },\n                },\n            );\n            window.dispatchEvent(errorEvent);\n        } else {\n            player.play('./media/notification.mp3', function (err) {});\n        }\n        return isCenterFound;\n    } catch (e) {\n        const errorEvent = new CustomEvent(\"errorEvent\", {\n                detail: {\n                    errorMessage: `Error occurred: ${e.response.data.error}`,\n                },\n            },\n        );\n        window.dispatchEvent(errorEvent);\n        return isCenterFound;\n    }\n}\n\nexport default findVaccinationCenters;","import React, { useState } from 'react';\nimport run from \"../findVaccinationCenters\";\n\nfunction Input() {\n    const [age, setAge] = useState(45);\n    const [pin, setPin] = useState();\n    const [vaccine, setVaccine] = useState();\n    const [isFreeVaccineOnly, setIsFreeVaccineOnly] = useState(false);\n    const [dose, setDose] = useState('1');\n\n    const handleAgeChange = (event) => {\n        setAge(event.target.value);\n    };\n    const handlePinChange = (event) => {\n        setPin(event.target.value);\n    };\n    const handleVaccineChange = (event) => {\n        setVaccine(event.target.value);\n    };\n    const handleCheckboxChange = () => {\n        setIsFreeVaccineOnly((prev) => !prev);\n    };\n    const changeDose = (event) => {\n        setDose(event.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const clearOutputEvent = new CustomEvent(\"clearOutputEvent\");\n        window.dispatchEvent(clearOutputEvent);\n        run(age,vaccine,pin, isFreeVaccineOnly, dose);\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label className=\"input-text\">\n                    Age:\n                    <input type=\"text\" value={age} onChange={handleAgeChange} className=\"input-age-value\"/>\n                </label>\n                <br/>\n                <label className=\"input-text\">\n                    Pincode:\n                    <input type=\"text\" value={pin} onChange={handlePinChange} className=\"input-pin-value\" />\n                </label>\n                <br/>\n                <label className=\"input-text\">\n                    Vaccine Preference:\n                    <input type=\"text\" value={vaccine} onChange={handleVaccineChange} className=\"input-vaccine-value\" />\n                </label>\n                <br/>\n                <label className=\"input-text\">\n                    Free Vaccines Only:\n                    <input name=\"isGoing\" type=\"checkbox\" checked={isFreeVaccineOnly} onChange={handleCheckboxChange} className=\"input-checkbox-value\" />\n                </label>\n                <br/>\n                <label className=\"input-text\">\n                    Dose :\n                    <select\n                        value={dose}\n                        onChange={changeDose}\n                        className=\"input-dose-value\"\n                    >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                    </select>\n                </label>\n                <br/>\n                <br/>\n                <br/>\n                <input type=\"submit\" value=\"Submit\" className=\"input-submit \"/>\n            </form>\n\n        </div>\n    );\n}\n\nexport default Input;","import React, {useEffect, useState} from 'react';\n\nfunction ErrorBanner() {\n    const [errorMessage, setErrorMessage] = useState(undefined);\n\n    const updateErrorMessage = (event) => {\n        setErrorMessage(event.detail.errorMessage);\n    };\n\n    const clearErrorMessage = () => {\n        setErrorMessage(undefined);\n    }\n\n    useEffect(() => {\n        window.addEventListener(\n            \"errorEvent\",\n            updateErrorMessage,\n            false\n        );\n        window.addEventListener(\n            \"outputEvent\",\n            clearErrorMessage,\n            false\n        );\n    }, []);\n\n    return (\n        <div className=\"error-message\">\n            {errorMessage}\n        </div>\n    );\n}\n\nexport default ErrorBanner;","import React from 'react';\nimport OutputTable from \"./OutputTable\";\nimport Input from \"./Input\";\nimport ErrorBanner from \"./ErrorBanner\";\nimport '../css/Main.css';\n\nfunction Main() {\n    return(\n        <div className=\"main\">\n            <Input/>\n            <br/>\n            <br/>\n            <ErrorBanner/>\n            <OutputTable/>\n        </div>\n\n    )\n}\n\nexport default Main;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./component/Main\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}